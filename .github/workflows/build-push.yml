name: Build-Push Docker Image

on:
  push:
    branches:
      - "develop-aks"

jobs:
  docker:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_DB: EvofastTest
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: password123@Lieu
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd "pg_isready"
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: 9.0.x

      # - name: Restore dependencies
      #   run: dotnet restore

      # - name: Build
      #   run: dotnet build --no-restore

      # - name: Test
      #   run: dotnet test --no-build --verbosity normal

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.SOLOCODE_USERNAME }}
          password: ${{ secrets.SOLOCODE_TOKEN }}

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.SOLOCODE_USERNAME }}/evofast-backend-aks:${{ env.IMAGE_TAG }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Decode and set KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Helm upgrade/install
        run: |
          helm upgrade --install evofast-backend ./helm-chart/evofast-backend \
            --set image.repository=${{ secrets.SOLOCODE_USERNAME }}/evofast-backend-aks \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set image.pullPolicy=Always
